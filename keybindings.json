[
  {
    "key": "ctrl+;",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+/",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+down",
    "command": "-editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+'",
    "command": "workbench.action.terminal.new"
  },
  {
    "key": "ctrl+'",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "ctrl+shift+[BracketLeft]",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "shift+alt+down",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+e ctrl+q",
    "command": "-sqltools.bookmarkSelection",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+r",
    "command": "-sqltools.deleteBookmark",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+a",
    "command": "-sqltools.runFromBookmarks",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+d",
    "command": "-sqltools.describeTable",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+e",
    "command": "-sqltools.executeQuery",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+s",
    "command": "-sqltools.showRecords",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+e ctrl+h",
    "command": "-sqltools.runFromHistory",
    "when": "!config.sqltools.disableChordKeybindings"
  },
  {
    "key": "ctrl+c",
    "command": "-sqltools.copyTextFromTreeItem",
    "when": "sideBarFocus && focusedView == 'sqltools-view-connectionExplorer'"
  },
  {
    "key": "ctrl+e ctrl+b",
    "command": "-sqltools.formatSql",
    "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  {
    "key": "ctrl+alt+[Minus]",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "shift+alt+right",
    "command": "-editor.action.smartSelect.expand",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "sideBarFocus"
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+c",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+/",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "space space",
    "command": "workbench.action.quickOpen",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space b d",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space b o",
    "command": "workbench.action.closeOtherEditors",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space t d",
    "command": "testing.debugAtCursor",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space c a",
    "command": "editor.action.quickFix",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space /",
    "command": "workbench.action.findInFiles",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "command": "-editor.action.startFindReplaceAction",
    "key": "ctrl+h",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.smartSelect.grow",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space d b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "editorTextFocus && neovim.mode != 'insert'"
  },
  {
    "key": "space c r",
    "command": "editor.action.rename",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "space c shift+r",
    "command": "editor.action.organizeImports",
    "when": "editorTextFocus && neovim.mode == 'normal'"
  },
  {
    "key": "ctrl+d",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.d && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  }
]
